@model Frontend.Collections.ConfirmBookingInputCollection

@{
    var package = ViewBag.Package as Frontend.Models.Package;
}

<h2>Checkout</h2>

<div class="card mb-3">
    <div class="card-body">
        <h5 class="card-title">@package.PackageName</h5>
        <p class="card-text">@package.PackageDesc</p>
        <p><strong>Price:</strong> $@package.PackagePrice</p>
    </div>
</div>

<!-- Checkout form -->
<form id="payment-form" method="post" asp-action="ConfirmPaymentAndBooking">
    <input type="hidden" name="PackageId" value="@Model.PackageId" />
    <input type="hidden" name="Amount" id="Amount" value="@Model.Amount" />
    <input type="hidden" name="PaymentMode" id="PaymentMode" value="Razorpay" />
    <input type="hidden" id="RazorpayPaymentId" name="RazorpayPaymentId" />
    <input type="hidden" id="RazorpayOrderId" name="RazorpayOrderId" />
    <input type="hidden" id="RazorpaySignature" name="RazorpaySignature" />

    <div class="form-group">
        <label>Number of People:</label>
        <input type="number" id="TotalNumberOfPeople" name="TotalNumberOfPeople" class="form-control" min="1" required />
    </div>
    <div class="form-group">
        <label>Journey Start Date Time:</label>
        <input type="datetime-local" name="JourneyStartDatetime" class="form-control" required />
    </div>

    <button type="button" id="rzp-button1" class="btn btn-success">Confirm Payment</button>
</form>

<!-- Razorpay Integration Script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    document.getElementById('rzp-button1').onclick = function (e) {
        alert("Hello");

        // Get the required data from form or model
        var amount = '@package.PackagePrice' * 100; // Convert to paise (Razorpay requires amount in paise)
        var bookingId = '@Model.PackageId'; // Use the package id

        // Prepare request payload
        var request = {
            Amount: amount.toString(), // Convert amount to string if needed
            BookingId: bookingId
        };

        console.log('Payload:', request);

        // Make a fetch call to your ASP.NET proxy API to generate the Razorpay order
        fetch('https://localhost:7024/', { // Update to match your proxy API URL
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify(request) // Send the payload
        })
            .then(response => {
                // Check if the response is ok
                if (!response.ok) {
                    return response.json().then(err => {
                        console.error('Error details:', err);
                        throw new Error(`HTTP error! Status: ${response.status}, Message: ${err.message}`);
                    });
                }
                return response.json();
            })
            .then(data => {
                console.log('Response:', data);

                // Extract order ID from the response
                var orderId = data.orderId;

                // Razorpay integration options
                var options = {
                    "key": "rzp_test_UsrTaVdC2mGjmn", // Replace with your Razorpay Key ID
                    "amount": amount, // Amount in paise
                    "currency": "INR",
                    "name": "Tafri Holidays Pvt. Ltd.",
                    "description": "Your transaction for holiday booking.",
                    "image": "https://example.com/your_logo", // Replace with your logo URL
                    "order_id": orderId, // The order ID returned from your API
                    "handler": function (paymentResponse) {
                        // Capture the payment details and submit the form
                        document.getElementById('RazorpayPaymentId').value = paymentResponse.razorpay_payment_id;
                        document.getElementById('RazorpayOrderId').value = paymentResponse.razorpay_order_id;
                        document.getElementById('RazorpaySignature').value = paymentResponse.razorpay_signature;
                        document.getElementById('payment-form').submit(); // Submit the form once payment is successful
                    },
                    "prefill": {
                        "name": "@(User.Identity.Name)", // Pre-fill the user's details
                    },
                    "theme": {
                        "color": "#3399cc"
                    }
                };

                // Open the Razorpay checkout
                var rzp1 = new Razorpay(options);
                rzp1.open();
            })
            .catch((error) => console.error('Fetch error:', error.message));
    };
</script>



@* <script>
    document.getElementById('rzp-button1').onclick = function (e) {
        alert("Hello");

        // Get the required data from form or model
        var amount = '@Model.Amount' * 100; // Convert to paise
        var userId = '@(User.Identity.Name)'; // Use the actual user id
        var bookingId = '@Model.PackageId'; // Use the package id

        // Call the proxy API to generate the Razorpay order using fetch
        fetch('https://localhost:7024', { // Update to match your proxy API URL
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                amount: amount,
                userId: userId,
                bookingId: bookingId
            })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Response:', data); // Log the response for debugging

                if (data.status === "true") {
                    var orderId = data.orderId;

                    // Razorpay order options
                    var options = {
                        "key": "rzp_test_UsrTaVdC2mGjmn", // Razorpay Key ID
                        "amount": amount, // Razorpay expects amount in paise
                        "currency": "INR",
                        "name": "ProEntertainment",
                        "description": "Test Transaction",
                        "image": "https://example.com/your_logo",
                        "order_id": orderId, // Order ID returned from Spring Boot API
                        "handler": function (paymentResponse) {
                            // Capture the Razorpay payment details and submit the form
                            document.getElementById('RazorpayPaymentId').value = paymentResponse.razorpay_payment_id;
                            document.getElementById('RazorpayOrderId').value = paymentResponse.razorpay_order_id;
                            document.getElementById('RazorpaySignature').value = paymentResponse.razorpay_signature;
                            document.getElementById('payment-form').submit();
                        },
                        "prefill": {
                            "name": "@(User.Identity.Name)", // Pre-fill user's details
                            "contact": "9876543210" // Replace with user's contact info
                        },
                        "theme": {
                            "color": "#3399cc"
                        }
                    };

                    // Open Razorpay checkout
                    var rzp1 = new Razorpay(options);
                    rzp1.open();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error generating Razorpay order:', error);
                alert('An error occurred while generating the Razorpay order.');
            });
    };
</script>
 *@
